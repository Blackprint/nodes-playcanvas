!async function(t,e){"use strict";e.exports&&e.exports!==globalThis&&Object.defineProperty(e.exports,"__esModule",{value:!0}),t.templates||(t.templates={});var a=sf.dom||sf.$,s=t.templates;t._sf_internal=t._sf_internal||{body_map:{},_replace(t,e){let s=a(e);return this.body_map[t]&&this.body_map[t].remove(),this.reinitViews&&this.reinitViews(s),this.body_map[t]=s},append(t,e){a(document.body).append(this._replace.apply(this,arguments))},prepend(t,e){a(document.body).prepend(this._replace.apply(this,arguments))}};let p=t.Blackprint.loadScope({url:import.meta.url}),l=sf.$;await sf.loader.task;let i=await p.getContext("PlayCanvas");s["BPIC/PlayCanvas/Application/Canvas.sf"]='<div class="node your-class" style="transform: translate({{x}}px, {{y}}px)"><sf-template path="Blackprint/nodes/template/routes.sf"></sf-template><sf-template path="Blackprint/nodes/template/header.sf"></sf-template><div class="content"><div class="left-port"><sf-template path="Blackprint/nodes/template/input-port.sf"></sf-template></div><div class="right-port"><sf-template path="Blackprint/nodes/template/output-port.sf"></sf-template></div></div><sf-template path="Blackprint/nodes/template/other.sf"></sf-template></div>',p.Sketch.registerInterface("BPIC/PlayCanvas/Application/Canvas",class extends i.IFace["Application/Canvas"]{init(t){l(this.canvas).insertBefore(this.$el(".left-port")[0]),super.init()}})}("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:this,"undefined"!=typeof module?module:{exports:this});
//# sourceMappingURL=nodes-playcanvas.sf.mjs.map